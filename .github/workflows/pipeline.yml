# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "dev" ]
  pull_request:
    branches: [ "dev" ]

permissions:
  contents: read

jobs:
  dependency-security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: install dependencies
      run: |
        python -m venv env/
        source env/bin/activate
        python -m pip install .
    - uses: pypa/gh-action-pip-audit@v1.0.8
      with:
          virtual-environment: env/

  SBOM:
    runs-on: ubuntu-latest
    steps:
    - uses: advanced-security/generate-sbom-action@v1
      id: gensbom
    - uses: actions/upload-artifact@v3
      with:
        name: sbom
        path: ${{ steps.gensbom.outputs.fileName }}

  build:
    runs-on: ubuntu-latest
    needs:
      - dependency-security
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python 3.10
      uses: actions/setup-python@v3
      with:
        python-version: "3.10"
    # - name: Install requirements.txt
      # run: if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: pip upgraden
      run: |
        python -m pip install --upgrade pip

    - name: Install dependencies
      run: |
        sudo apt-get install build-essential nginx supervisor
        python -m pip install gunicorn gevent
        python -m pip install .

    - name: setup config file
      shell: bash
      env:
        SECRET_KEY: ${{ secrets.SECRET_KEY }}
        #PERMISSIONS: ${{secrets.XXX}}
      run: |
        cat <<EOF >> bepasty.conf

        SITENAME = 'bepasty.example.org'

        APP_BASE_PATH = None  # '/bepasty'

        UPLOAD_LOCKED = False

        ASCIINEMA_THEME = 'asciinema'

        MAX_ALLOWED_FILE_SIZE = 5 * 1000 * 1000 * 1000

        MAX_BODY_SIZE = 1 * 1024 * 1024 - 8192  # 8kiB safety margin, issue #155

        MAX_RENDER_SIZE = {
            'text/x-bepasty-list': 1000 * 38,
            'HIGHLIGHT_TYPES': 100 * 1000,
            'application/pdf': 10 * 1000 * 1000,
            'application/x-pdf': 10 * 1000 * 1000,
            'image/': 10 * 1000 * 1000,
            'audio/': 1 * 1000 * 1000 * 1000,
            'video/': 5 * 1000 * 1000 * 1000,
            '': 1 * 1000 * 1000,
        }
        USE_PYTHON_MAGIC = False
        STORAGE = 'filesystem'
        STORAGE_FILESYSTEM_DIRECTORY = '/tmp/'
        SECRET_KEY = '$SECRET_KEY'
        SESSION_COOKIE_SECURE = True
        PERMANENT_SESSION = False
        PERMANENT_SESSION_LIFETIME = 31 * 24 * 3600

        PERMISSIONS = {
        }

        DEFAULT_PERMISSIONS = ''
        EOF
    - name: Start bepasty server
      shell: bash
      run: BEPASTY_CONFIG=$(pwd)/bepasty.conf bepasty-server --debug &
      
  zap_scan:
    runs-on: ubuntu-latest
    name: DAST scan
    permissions: write-all
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      # - name: Install requirements.txt
        # run: if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: pip upgraden
        run: |
          python -m pip install --upgrade pip

      - name: Install dependencies
        run: |
          sudo apt-get install build-essential nginx supervisor
          python -m pip install gunicorn gevent
          python -m pip install .

      - name: setup config file for bepasty
        shell: bash
        env:
          SECRET_KEY: ${{ secrets.SECRET_KEY }}
          #PERMISSIONS: ${{secrets.XXX}}
        run: |
          cat <<EOF >> bepasty.conf

          SITENAME = 'bepasty.example.org'

          APP_BASE_PATH = None  # '/bepasty'

          UPLOAD_LOCKED = False

          ASCIINEMA_THEME = 'asciinema'

          MAX_ALLOWED_FILE_SIZE = 5 * 1000 * 1000 * 1000

          MAX_BODY_SIZE = 1 * 1024 * 1024 - 8192  # 8kiB safety margin, issue #155

          MAX_RENDER_SIZE = {
              'text/x-bepasty-list': 1000 * 38,
              'HIGHLIGHT_TYPES': 100 * 1000,
              'application/pdf': 10 * 1000 * 1000,
              'application/x-pdf': 10 * 1000 * 1000,
              'image/': 10 * 1000 * 1000,
              'audio/': 1 * 1000 * 1000 * 1000,
              'video/': 5 * 1000 * 1000 * 1000,
              '': 1 * 1000 * 1000,
          }
          USE_PYTHON_MAGIC = False
          STORAGE = 'filesystem'
          STORAGE_FILESYSTEM_DIRECTORY = '/tmp/'
          SECRET_KEY = '$SECRET_KEY'
          SESSION_COOKIE_SECURE = True
          PERMANENT_SESSION = False
          PERMANENT_SESSION_LIFETIME = 31 * 24 * 3600

          PERMISSIONS = {
          }

          DEFAULT_PERMISSIONS = ''
          EOF

      - name: Start bepasty server
        shell: bash
        run: BEPASTY_CONFIG=$(pwd)/bepasty.conf bepasty-server --debug &   

      - name: setup context file for authenticated scan
        shell: bash
        run: |
          cat <<EOF >> bepasty-login.context
          <?xml version="1.0" encoding="UTF-8" standalone="no"?>
          <configuration>
              <context>
                  <name>login</name>
                  <desc/>
                  <inscope>true</inscope>
                  <incregexes>http://127.0.0.1:5000.*</incregexes>
                  <tech>
                      <include>Db</include>
                      <include>Db.CouchDB</include>
                      <include>Db.Firebird</include>
                      <include>Db.HypersonicSQL</include>
                      <include>Db.IBM DB2</include>
                      <include>Db.Microsoft Access</include>
                      <include>Db.Microsoft SQL Server</include>
                      <include>Db.MongoDB</include>
                      <include>Db.MySQL</include>
                      <include>Db.Oracle</include>
                      <include>Db.PostgreSQL</include>
                      <include>Db.SAP MaxDB</include>
                      <include>Db.SQLite</include>
                      <include>Db.Sybase</include>
                      <include>Language</include>
                      <include>Language.ASP</include>
                      <include>Language.C</include>
                      <include>Language.JSP/Servlet</include>
                      <include>Language.Java</include>
                      <include>Language.Java.Spring</include>
                      <include>Language.JavaScript</include>
                      <include>Language.PHP</include>
                      <include>Language.Python</include>
                      <include>Language.Ruby</include>
                      <include>Language.XML</include>
                      <include>OS</include>
                      <include>OS.Linux</include>
                      <include>OS.MacOS</include>
                      <include>OS.Windows</include>
                      <include>SCM</include>
                      <include>SCM.Git</include>
                      <include>SCM.SVN</include>
                      <include>WS</include>
                      <include>WS.Apache</include>
                      <include>WS.IIS</include>
                      <include>WS.Tomcat</include>
                  </tech>
                  <urlparser>
                      <class>org.zaproxy.zap.model.StandardParameterParser</class>
                      <config>{"kvps":"&amp;","kvs":"=","struct":[]}</config>
                  </urlparser>
                  <postparser>
                      <class>org.zaproxy.zap.model.StandardParameterParser</class>
                      <config>{"kvps":"&amp;","kvs":"=","struct":[]}</config>
                  </postparser>
                  <authentication>
                      <type>2</type>
                      <strategy>EACH_RESP</strategy>
                      <pollurl/>
                      <polldata/>
                      <pollheaders/>
                      <pollfreq>60</pollfreq>
                      <pollunits>REQUESTS</pollunits>
                      <loggedout>&lt;button type="submit" class="btn btn-outline-secondary"&gt;Login&lt;/button&gt;</loggedout>
                      <form>
                          <loginurl>http://127.0.0.1:5000/+login</loginurl>
                          <loginbody>token={%username%}</loginbody>
                          <loginpageurl>http://127.0.0.1:5000/+login</loginpageurl>
                      </form>
                  </authentication>
                  <users>
                      <user>3984;true;MTIzNA==;2;MTIzNA==~MTIzNA==~</user>
                  </users>
                  <forceduser>3984</forceduser>
                  <session>
                      <type>0</type>
                  </session>
                  <authorization>
                      <type>0</type>
                      <basic>
                          <header/>
                          <body/>
                          <logic>AND</logic>
                          <code>-1</code>
                      </basic>
                  </authorization>
              </context>
          </configuration>
          EOF
   
      - name: ZAP authenticated Scan
        uses: zaproxy/action-full-scan@v0.7.0
        with:
          docker_name: 'ghcr.io/zaproxy/zaproxy:stable'
          target: 'http://127.0.0.1:5000'
          cmd_options: '-a -j -U "1234" -n bepasty-login.context'

  appthreat_scan:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: Self sast-scan
        uses: AppThreat/sast-scan-action@v1.0.0
        with:
          output: reports
          type: python
      - name: Upload scan reports
        uses: actions/upload-artifact@v1.0.0
        with:
          name: sast-scan-reports
          path: reports